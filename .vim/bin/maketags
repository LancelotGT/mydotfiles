#!/bin/bash

verbose=0
force=0

while getopts vf opt
do
  case $opt in
    v) verbose=1
      ;;
    f) force=1
      ;;
  esac
done
shift $((OPTIND-1))

function vecho
{
  if [[ $verbose = 1 ]]; then
    echo $@
  fi
}

function in_git_repo
{
  git status > /dev/null 2>&1
}

function get_code_dir
{
  if in_git_repo; then
    git rev-parse --show-toplevel
  else
    p4 client -o | grep ^Root | awk '{print $2}'
  fi
}

function get_branch
{
  if in_git_repo; then
    git branch | grep '^\*' | cut -c3-
  else
    p4 client -o | grep ^Client | awk '{print $2}'
  fi
}

code_dir=$(get_code_dir)
branch=$(get_branch)
tagbranch=$(echo $branch | tr '/ ' '-')
processes=$(pgrep ctags)
if [[ -n $processes ]]; then
  vecho "Killing off: $processes"
  pkill ctags
fi
find $code_dir -type d -and -name src | \
while read dir
do
  tagfile=$(echo $dir | tr '/ ' '-' | cut -c2-)-$tagbranch-tags
  tagoutput=~/.vim-tags/$tagfile
  if [[ $force == 1 ]]; then
    rm -f $tagoutput
  fi
  run=0
  if [[ ! -f $tagoutput ]]; then
    run=1
  elif [[ -n $(find $dir -newer $tagoutput) ]]; then
    run=1
  fi
  if [[ $run = 1 ]]; then
    vecho Running CTAGS to $tagfile
    /usr/local/bin/ctags --recurse -f $tagoutput $dir 2>/dev/null &
  fi
done
wait
